#!/bin/bash

set -e

originalImage=${1?"Original image to test change"}
originalImageHex=`mktemp`

tmpConf=`mktemp`

trap cleanup 0 SIGTERM SIGKILL

_testEq() {
  if [ "$1" == "$2" ]; then
    echo -en "\e[32m[PASS]"
  else
    echo -en "\e[31m[FAIL] $1 != $2"
    echo -e "\e[0m $3"
    exit 1
  fi
  echo -e "\e[0m $3"
}

cleanup() {
  echo "Cleaning"
  rm -rf $tmpConf $originalImageHex device.img
}

paramFlagTest() {
  local base=${1?"Base address"}
  local offset=${2?"Offset"}
  local paramName=${3?"Param Name"}
  local size=1
  local hex=`printf "0x%X\n" $(($base + $offset))`

  ./dmrconfig $originalImage > $tmpConf
  egrep "^$paramName" $tmpConf
  sed -r -i "s/^$paramName:.*/$paramName: 1/g" $tmpConf
  egrep "^$paramName" $tmpConf
  ./dmrconfig -c $originalImage $tmpConf
  echo "Target $hex"
  xxd device.img | diff $originalImageHex - || true
  #vim -d $originalImageHex <(xxd device.img) 
  val=`xxd -s $hex -l $size device.img | awk '{print $2}'`
  _testEq "01" "$val" "$paramName 1"

  ./dmrconfig $originalImage > $tmpConf
  egrep "^$paramName" $tmpConf
  sed -r -i "s/^$paramName:.*/$paramName: 0/g" $tmpConf
  egrep "^$paramName" $tmpConf
  ./dmrconfig -c $originalImage $tmpConf
  echo "Target $hex"
  xxd device.img | diff $originalImageHex - || true
  val=`xxd -s $hex -l $size device.img | awk '{print $2}'`
  _testEq "00" "$val" "$paramName 0"
}

touchTest() {
  local image=$originalImage

  ./dmrconfig $image > $tmpConf
  ./dmrconfig -c $image $tmpConf
  #  xxd $image | grep -i $hex
  #  xxd device.img | grep -i $hex
  if  cmp $image device.img; then
    echo -en "\e[32mPASS"
  else
    echo -en "\e[32mFAIL"
  fi
  echo -e "\e[0m ${FUNCNAME[0]}"
}

main () {
  xxd $originalImage > $originalImageHex
  touchTest

  paramFlagTest "0x0071600" "1"   "Ch Name"
  paramFlagTest "0x0071600" "188" "GPS Units"
  paramFlagTest "0x0071600" "25"  "Hold Time"
  paramFlagTest "0x0071600" "51"  "Talk Alert"
  paramFlagTest "0x0071600" "215" "Manual Hold Time"

  echo -e "\e[32mALL TEST PASS\e[0m"
}

main $@
